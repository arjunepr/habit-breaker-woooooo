{"version":3,"sources":["ts/utils/delayer.ts","ts/utils/text_injector.ts","ts/constants/lyrics.ts","ts/index.ts"],"names":[],"mappings":"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","file":"ts.877bf270.js","sourceRoot":"../src","sourcesContent":["export default function delayer(timeout: number): Promise<Boolean> {\n  return new Promise((resolve, _reject) => {\n    setTimeout(() => {\n      resolve(true);\n    }, timeout);\n  }); \n};\n","export default function textInjector(text: string, elementId: string | Element): Element {\n  const element = elementId instanceof Element ? elementId : document.getElementById(elementId);\n  element.innerHTML += text;\n  return element;\n}\n","export default `Memories consume like opening the wound\nI'm picking me apart again\n\n\nYou all assume\nI'm safe here in my room\nUnless I try to start again\n\n\nI don't want to be the one the battles always choose\n\n'Cause inside I realize that I'm the one confused\n\nI don't know what's worth fighting for\nOr why I have to scream\n\nI don't know why I instigate\nAnd say what I don't mean\nI don't know how I got this way\nI know it's not alright\nSo I'm breaking the habit\nI'm breaking the habit tonight\n\n\nClutching my cure\nI tightly lock the door\nI try to catch my breath again\n\nI hurt much more than any time before\nI have no options left again\nI don't want to be the one the battles always choose\n'Cause inside I realize that I'm the one confused\nI don't know what's worth fighting for\nOr why I have to scream\nI don't know why I instigate\nAnd say what I don't mean\nI don't know how I got this way\nI'll never be alright\nSo I'm breaking the habit\nI'm breaking the habit tonight\n\nI'll paint it on the walls\n'Cause I'm the one at fault\n\nI'll never fight again\nAnd this is how it ends\nI don't know what's worth fighting for\nOr why I have to scream\nBut now I have some clarity to show you what I mean\nI don't know how I got this way\nI'll never be alright\nSo I'm breaking the habit\nI'm breaking the habit\nI'm breaking the habit tonight\n\nI don't know what's worth fighting for\nOr why I have to scream\nI don't know why I instigate\nAnd say what I don't mean\nI don't know how I got this way\nI'll never be alright\nSo I'm breaking the habit\nI'm breaking the habit tonight\nI'm breaking the habit (tonight)\n`;","import delayer from './utils/delayer';\nimport textInjector from './utils/text_injector';\n\nimport lyrics from './constants/lyrics';\n\nasync function main() {\n  const lyrics_text_length = lyrics.length;\n  let new_line_counter = 0;\n  let terminalElement = document.getElementById('terminal');\n\n  try {\n    for(let i=0; i < lyrics_text_length; ++i) {\n      let nextText = null;\n      if (lyrics[i] === '\\n') {\n        new_line_counter+=1;\n        nextText = '<br/>';\n        await delayer(333 + new_line_counter * 333);\n      } else {\n        new_line_counter=0;\n        nextText = lyrics[i];\n      }\n      await delayer(100);\n      textInjector(nextText, terminalElement);\n    }\n  } catch(e) {\n\n  }\n}\n\nmain();"]}